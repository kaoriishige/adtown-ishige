'use client'

import { useEffect, useState } from 'react'
import { doc, getDoc } from 'firebase/firestore'
import { db } from '@/lib/firebase'
import { Sparkles, Gift, LineChart } from 'lucide-react'

type LandingData = {
  title: string
  subtitle: string
  campaign: string
  cta: string
  benefits: string[]
  referralNote: string
  companyName: string
}

export default function LandingV2() {
  const [data, setData] = useState<LandingData | null>(null)

  useEffect(() => {
    const fetchData = async () => {
      try {
        const ref = doc(db, 'settings', 'landingV2') // ← 大文字V！
        const snap = await getDoc(ref)
        if (snap.exists()) {
          setData(snap.data() as LandingData)
        } else {
          console.warn('⚠️ ドキュメントが存在しません')
        }
      } catch (error) {
        console.error('❌ Firestore 読み込みエラー:', error)
      }
    }
    fetchData()
  }, [])

  if (!data) {
    return (
      <p className="p-6 text-red-600 font-semibold">
        読み込み中...（Firestore データが取得できていません）
      </p>
    )
  }

  return (
    <div className="bg-white text-gray-800">
      <section className="bg-gradient-to-r from-blue-500 to-purple-600 text-white py-20 px-6 text-center">
        <p className="text-2xl font-bold text-red-300 mb-2">緊急予告!!</p>
        <h1 className="text-4xl font-extrabold mb-2">{data.title}</h1>
        <p className="text-xl font-semibold text-red-300 mb-4">{data.campaign}</p>
        <p className="text-lg font-medium mb-6">{data.subtitle}</p>
        <a
          href="#register"
          className="inline-block bg-white text-blue-700 font-bold py-3 px-8 rounded-full shadow hover:bg-blue-100 transition text-lg"
        >
          {data.cta}
        </a>
      </section>

      <section className="py-14 px-6 text-center bg-white">
        <h2 className="text-2xl font-bold mb-6 flex items-center justify-center gap-2">
          <Sparkles className="w-6 h-6 text-purple-600" />
          こんなお悩み、ありませんか？
        </h2>
        <ul className="max-w-xl mx-auto text-left space-y-3 text-lg">
          {data.benefits.map((line, i) => (
            <li key={i}>💬 {line}</li>
          ))}
        </ul>
      </section>

      <section className="bg-green-50 py-16 px-6 text-center" id="register">
        <h2 className="text-2xl font-bold mb-6 flex items-center justify-center gap-2">
          <LineChart className="w-6 h-6 text-green-700" />
          紹介制度で副収入に！
        </h2>
        <div
          className="text-lg space-y-2 text-gray-800 max-w-2xl mx-auto"
          dangerouslySetInnerHTML={{ __html: data.referralNote }}
        />
      </section>

      <section className="bg-blue-100 py-16 px-6 text-center">
        <h2 className="text-xl font-bold mb-4 flex justify-center items-center gap-2">
          <Gift className="w-5 h-5 text-blue-500" />
          先行登録キャンペーン 実施中！
        </h2>
        <a
          href="https://lin.ee/7GKI01W"
          target="_blank"
          rel="noopener noreferrer"
        >
          <img
            src="https://scdn.line-apps.com/n/line_add_friends/btn/ja.png"
            alt="友だち追加"
            height="36"
            style={{ border: 0 }}
            className="mx-auto"
          />
        </a>
        <p className="text-sm text-gray-500 mt-4">※ボタンをタップしてLINE登録！</p>
      </section>

      <footer className="bg-gray-100 text-center py-6 text-sm text-gray-600 leading-relaxed">
        <div dangerouslySetInnerHTML={{ __html: data.companyName }} />
        <div className="mt-4">
          <a
            href="#register"
            className="inline-block bg-blue-600 text-white font-bold py-3 px-8 rounded-full shadow hover:bg-blue-700 transition text-lg"
          >
            {data.cta}
          </a>
        </div>
      </footer>
    </div>
  )
}


