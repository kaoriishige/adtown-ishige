import { useState, useEffect, useCallback, useMemo } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import { db, auth, storage } from '../../lib/firebase';
import {
    collection, query, getDocs, doc, updateDoc, addDoc, serverTimestamp, arrayUnion, where // where„Çí„Ç§„É≥„Éù„Éº„Éà
} from 'firebase/firestore';
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { onAuthStateChanged, User } from 'firebase/auth';
import { v4 as uuidv4 } from 'uuid';

// „Ç∞„É≠„Éº„Éê„É´Â§âÊï∞„ÅÆÂûã„ÇíÂÆ£Ë®Ä
declare const __app_id: string;

// „Ç∞„É≠„Éº„Éê„É´Â§âÊï∞„Åã„Çâ„Ç¢„Éó„É™ID„ÇíÂèñÂæó
const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';

// „Ç´„ÉÜ„Ç¥„É™„Éá„Éº„Çø (ÁúÅÁï•„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì)
const categoryData = {
    "È£≤È£üÈñ¢ÈÄ£": ["„É¨„Çπ„Éà„É©„É≥„ÉªÈ£üÂ†Ç", "„Ç´„Éï„Çß„ÉªÂñ´Ëå∂Â∫ó", "Â±ÖÈÖíÂ±ã„Éª„Éê„Éº", "„Éë„É≥Â±ãÔºà„Éô„Éº„Ç´„É™„ÉºÔºâ", "ÂíåËèìÂ≠ê„ÉªÊ¥ãËèìÂ≠êÂ∫ó", "„É©„Éº„É°„É≥Â∫ó", "„Åù„Å∞„Éª„ÅÜ„Å©„ÇìÂ∫ó", "ÂØøÂè∏Â±ã", "„Åù„ÅÆ‰ªñ"],
    "Ë≤∑„ÅÑÁâ©Èñ¢ÈÄ£": ["Ëæ≤Áî£Áâ©Áõ¥Â£≤ÊâÄ„ÉªÈùíÊûúÂ∫ó", "Á≤æËÇâÂ∫ó„ÉªÈÆÆÈ≠öÂ∫ó", "ÂÄã‰∫∫ÁµåÂñ∂„ÅÆÈ£üÊñôÂìÅÂ∫ó", "ÈÖíÂ∫ó", "„Éñ„ÉÜ„Ç£„ÉÉ„ÇØ„ÉªË°£ÊñôÂìÅÂ∫ó", "ÈõëË≤®Â∫ó„ÉªÊ∞ëËä∏ÂìÅÂ∫ó", "Êõ∏Â∫ó", "Ëä±Â±ã", "„ÅäÂúüÁî£Â∫ó", "„Åù„ÅÆ‰ªñ"],
    "ÁæéÂÆπ„ÉªÂÅ•Â∫∑Èñ¢ÈÄ£": ["ÁæéÂÆπÂÆ§„ÉªÁêÜÂÆπÂÆ§", "„Éç„Ç§„É´„Çµ„É≠„É≥", "„Ç®„Çπ„ÉÜ„Çµ„É≠„É≥", "„É™„É©„ÇØ„Çº„Éº„Ç∑„Éß„É≥„Éª„Éû„ÉÉ„Çµ„Éº„Ç∏", "Êï¥‰Ωì„ÉªÊï¥È™®Èô¢„ÉªÈçºÁÅ∏Èô¢", "ÂÄã‰∫∫ÁµåÂñ∂„ÅÆËñ¨Â±Ä", "„ÇØ„É™„Éã„ÉÉ„ÇØ„ÉªÊ≠ØÁßëÂåªÈô¢", "„Åù„ÅÆ‰ªñ"],
    "‰Ωè„Åæ„ÅÑ„ÉªÊöÆ„Çâ„ÅóÈñ¢ÈÄ£": ["Â∑•ÂãôÂ∫ó„ÉªÂª∫ÁØâ„Éª„É™„Éï„Ç©„Éº„É†", "Ê∞¥ÈÅì„ÉªÈõªÊ∞óÂ∑•‰∫ã", "‰∏çÂãïÁî£‰ºöÁ§æ", "„ÇØ„É™„Éº„Éã„É≥„Ç∞Â∫ó", "ÈÄ†Âúí„ÉªÊ§çÊú®Â±ã", "‰æøÂà©Â±ã", "„Åù„ÅÆ‰ªñ"],
    "ÊïôËÇ≤„ÉªÁøí„ÅÑ‰∫ãÈñ¢ÈÄ£": ["Â≠¶ÁøíÂ°æ„ÉªÂÆ∂Â∫≠ÊïôÂ∏´", "„Éî„Ç¢„Éé„ÉªÈü≥Ê•ΩÊïôÂÆ§", "Ëã±‰ºöË©±ÊïôÂÆ§", "Êõ∏ÈÅì„Éª„Åù„Çç„Å∞„ÇìÊïôÂÆ§", "„Çπ„Éù„Éº„ÉÑ„ÇØ„É©„Éñ„ÉªÈÅìÂ†¥", "„Éë„ÇΩ„Ç≥„É≥ÊïôÂÆ§", "ÊñôÁêÜÊïôÂÆ§", "„Åù„ÅÆ‰ªñ"],
    "Ëªä„Éª„Éê„Ç§„ÇØÈñ¢ÈÄ£": ["Ëá™ÂãïËªäË≤©Â£≤Â∫ó„ÉªËá™ÂãïËªäÊï¥ÂÇô„Éª‰øÆÁêÜÂ∑•Â†¥", "„Ç¨„ÇΩ„É™„É≥„Çπ„Çø„É≥„Éâ", "„Éê„Ç§„ÇØ„Ç∑„Éß„ÉÉ„Éó", "„Åù„ÅÆ‰ªñ"],
    "Ë¶≥ÂÖâ„Éª„É¨„Ç∏„É£„ÉºÈñ¢ÈÄ£": ["„Éõ„ÉÜ„É´„ÉªÊóÖÈ§®„Éª„Éö„É≥„Ç∑„Éß„É≥", "Êó•Â∏∞„ÇäÊ∏©Ê≥âÊñΩË®≠", "Ë¶≥ÂÖâÊñΩË®≠„ÉªÁæéË°ìÈ§®„ÉªÂçöÁâ©È§®", "‰ΩìÈ®ìÂ∑•ÊàøÔºàÈô∂Ëä∏„Éª„Ç¨„É©„Çπ„Å™„Å©Ôºâ", "ÁâßÂ†¥„ÉªËæ≤Âúí", "„Ç≠„É£„É≥„ÉóÂ†¥„Éª„Ç∞„É©„É≥„Éî„É≥„Ç∞ÊñΩË®≠", "„Ç¥„É´„ÉïÂ†¥", "Ë≤∏„ÅóÂà•Ëçò", "„Åù„ÅÆ‰ªñ"],
    "„Éö„ÉÉ„ÉàÈñ¢ÈÄ£": ["ÂãïÁâ©ÁóÖÈô¢", "„Éà„É™„Éü„É≥„Ç∞„Çµ„É≠„É≥", "„Éö„ÉÉ„Éà„Éõ„ÉÜ„É´„Éª„Éâ„ÉÉ„Ç∞„É©„É≥", "„Åù„ÅÆ‰ªñ"],
    "Â∞ÇÈñÄ„Çµ„Éº„Éì„ÇπÈñ¢ÈÄ£": ["ÂºÅË≠∑Â£´„ÉªÁ®éÁêÜÂ£´„ÉªË°åÊîøÊõ∏Â£´„Å™„Å©„ÅÆÂ£´Ê•≠", "„Éá„Ç∂„Ç§„É≥„ÉªÂç∞Âà∑‰ºöÁ§æ", "ÂÜôÁúüÈ§®", "‰øùÈô∫‰ª£ÁêÜÂ∫ó", "„Ç´„Ç¶„É≥„Çª„É™„É≥„Ç∞", "„Ç≥„É≥„Çµ„É´„ÉÜ„Ç£„É≥„Ç∞", "„Åù„ÅÆ‰ªñ"],
    "„Åù„ÅÆ‰ªñ": ["„Åù„ÅÆ‰ªñ"],
};
const mainCategories = Object.keys(categoryData);

// Â∫óËàóÁ¥π‰ªãÊñá„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà
const descriptionPlaceholders: { [key: string]: string } = {
    'È£≤È£üÈñ¢ÈÄ£': '„Äê„ÅäÂ∫ó„ÅÆ„Åì„Å†„Çè„Çä„Äë\n‰æãÔºöÂú∞ÂÖÉÈÇ£È†à„ÅÆÊñ∞ÈÆÆ„Å™ÈáéËèú„Çí„Åü„Å£„Å∑„Çä‰Ωø„Å£„Åü„Ç§„Çø„É™„Ç¢„É≥„Åß„Åô„ÄÇ\n\n„Äê„Åä„Åô„Åô„ÇÅ„É°„Éã„É•„Éº„Äë\n‰æãÔºö„Å®„Å°„ÅéÂíåÁâõ„ÅÆ„Ç∞„É™„É´„ÄÅÂ≠£ÁØÄÈáéËèú„ÅÆ„Éê„Éº„Éã„É£„Ç´„Ç¶„ÉÄ\n\n„ÄêÂ∏≠Êï∞„Äë\n‰æãÔºö30Â∏≠Ôºà„Ç´„Ç¶„É≥„Çø„Éº10Â∏≠„ÄÅ„ÉÜ„Éº„Éñ„É´20Â∏≠Ôºâ\n\n„ÄêÂÄãÂÆ§„Äë\n‰æãÔºö„ÅÇ„ÇäÔºà4ÂêçÊßòÁî®√ó2ÂÆ§Ôºâ\n\n„ÄêÁ¶ÅÁÖô„ÉªÂñ´ÁÖô„Äë\n‰æãÔºöÂÖ®Â∏≠Á¶ÅÁÖô\n\n„ÄêÈßêËªäÂ†¥„Äë\n‰æãÔºö„ÅÇ„ÇäÔºà10Âè∞Ôºâ\n\n„ÄêÂñ∂Ê•≠ÊôÇÈñì„Äë\n‰æãÔºö\n[ÊúàÔΩûÈáë]\n11:00ÔΩû15:00 (L.O. 14:30)\n17:00ÔΩû22:00 (L.O. 21:30)\n[Âúü„ÉªÊó•„ÉªÁ•ù]\n11:00ÔΩû22:00 (L.O. 21:30)\n\n„ÄêÂÆö‰ºëÊó•„Äë\n‰æãÔºöÊØéÈÄ±Ê∞¥ÊõúÊó•„ÄÅÁ¨¨2ÁÅ´ÊõúÊó•',
    'ÁæéÂÆπÂÆ§„ÉªÁêÜÂÆπÂÆ§': '„ÄêÂæóÊÑè„Å™„Çπ„Çø„Ç§„É´„Äë\n‰æãÔºö„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà„ÄÅÈÄèÊòéÊÑü„ÅÆ„ÅÇ„Çã„Ç´„É©„Éº„É™„É≥„Ç∞„ÅåÂæóÊÑè„Åß„Åô„ÄÇ\n\n„Äê„ÅäÂ∫ó„ÅÆÈõ∞Âõ≤Ê∞ó„Äë\n‰æãÔºöÁôΩ„ÇíÂü∫Ë™ø„Å®„Åó„ÅüËêΩ„Å°ÁùÄ„ÅÑ„ÅüÁ©∫Èñì„Åß„ÄÅ„É™„É©„ÉÉ„ÇØ„Çπ„Åó„ÅüÊôÇÈñì„Çí„ÅäÈÅé„Åî„Åó„ÅÑ„Åü„Å†„Åë„Åæ„Åô„ÄÇ\n\n„ÄêÂ∏≠Êï∞„Äë\n‰æãÔºö4Â∏≠\n\n„ÄêÈßêËªäÂ†¥„Äë\n‰æãÔºö„ÅÇ„ÇäÔºàÂ∫óËàóÂâç„Å´2Âè∞Ôºâ\n\n„ÄêÂñ∂Ê•≠ÊôÇÈñì„Äë\n‰æãÔºö\nÂπ≥Êó• 10:00ÔΩû20:00\nÂúüÊó•Á•ù 9:00ÔΩû19:00\n\n„ÄêÂÆö‰ºëÊó•„Äë\n‰æãÔºöÊØéÈÄ±ÁÅ´ÊõúÊó•',
    'Êï¥‰Ωì„ÉªÊï¥È™®Èô¢„ÉªÈçºÁÅ∏Èô¢': '„Äê„Åì„Çì„Å™ÁóáÁä∂„ÅØ„Åä‰ªª„Åõ„Åè„Å†„Åï„ÅÑ„Äë\n‰æãÔºöÈï∑Âπ¥„ÅÆËÇ©„Åì„Çä„ÇÑËÖ∞Áóõ„ÄÅÁî£Âæå„ÅÆÈ™®Áõ§ÁüØÊ≠£„Å™„Å©„ÄÅÊ†πÊú¨ÊîπÂñÑ„ÇíÁõÆÊåá„Åó„Åæ„Åô„ÄÇ\n\n„ÄêÊñΩË°ì„ÅÆÁâπÂæ¥„Äë\n‰æãÔºö‰∏Ä‰∫∫„Å≤„Å®„Çä„ÅÆË∫´‰Ωì„ÅÆÁä∂ÊÖã„Å´Âêà„Çè„Åõ„Åü„Ç™„Éº„ÉÄ„Éº„É°„Ç§„Éâ„ÅÆÊñΩË°ì„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ\n\n„ÄêË®≠ÂÇô„Äë\n‰æãÔºöÂÄãÂÆ§„ÅÇ„Çä„ÄÅÁùÄÊõø„ÅàË≤∏Âá∫„ÅÇ„Çä\n\n„Äê‰∫àÁ¥Ñ„Äë\n‰æãÔºöÂÆåÂÖ®‰∫àÁ¥ÑÂà∂\n\n„ÄêÂñ∂Ê•≠ÊôÇÈñì„Äë\n‰æãÔºö\n9:00ÔΩû12:00 / 14:00ÔΩû20:00\n\n„ÄêÂÆö‰ºëÊó•„Äë\n‰æãÔºöÊó•ÊõúÊó•„ÉªÁ•ùÊó•',
    '„Éá„Éï„Ç©„É´„Éà': '„Äê„ÅäÂ∫ó„Éª‰ºöÁ§æ„ÅÆÁâπÂæ¥„Äë\n‰æãÔºöÂú∞Âüü„Å´Ê†π„Åñ„Åó„Å¶50Âπ¥„ÄÇ„ÅäÂÆ¢Êßò‰∏Ä‰∫∫„Å≤„Å®„Çä„Å´ÂØÑ„ÇäÊ∑ª„Å£„Åü„Çµ„Éº„Éì„Çπ„ÇíÂøÉ„Åå„Åë„Å¶„ÅÑ„Åæ„Åô„ÄÇ\n\n„Äê‰∏ª„Å™„Çµ„Éº„Éì„ÇπÂÜÖÂÆπ„Äë\n‰æãÔºö\n„Éª„Äá„Äá„ÅÆË≤©Â£≤\n„Éª„Äá„Äá„ÅÆ‰øÆÁêÜ„Éª„É°„É≥„ÉÜ„Éä„É≥„Çπ\n\n„ÄêÂñ∂Ê•≠ÊôÇÈñì„Äë\n‰æãÔºö\n9:00ÔΩû18:00\n\n„ÄêÂÆö‰ºëÊó•„Äë\n‰æãÔºöÂúüÊó•Á•ù',
};

const EditStorePage = () => { // „Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÂêç„ÇíÂ§âÊõ¥
    const router = useRouter();
    const [user, setUser] = useState<User | null>(null);
    const [loading, setLoading] = useState(true);
    const [isSaving, setIsSaving] = useState(false);
    const [storeId, setStoreId] = useState<string | null>(null);
    const [storeName, setStoreName] = useState('');
    const [address, setAddress] = useState('');
    const [phoneNumber, setPhoneNumber] = useState('');
    const [mainCategory, setMainCategory] = useState('');
    const [subCategory, setSubCategory] = useState('');
    const [otherMainCategory, setOtherMainCategory] = useState('');
    const [otherSubCategory, setOtherSubCategory] = useState('');
    const [subCategoryOptions, setSubCategoryOptions] = useState<string[]>([]);
    const [description, setDescription] = useState('');
    const [websiteUrl, setWebsiteUrl] = useState('');
    const [snsUrls, setSnsUrls] = useState(['', '', '']);
    const [mainImageUrl, setMainImageUrl] = useState<string | null>(null);
    const [galleryImageUrls, setGalleryImageUrls] = useState<string[]>([]);
    const [mainImageFile, setMainImageFile] = useState<File | null>(null);
    const [galleryImageFiles, setGalleryImageFiles] = useState<File[]>([]);
    const [error, setError] = useState<string | null>(null);
    
    const descriptionPlaceholder = useMemo(() => {
        if (mainCategory.includes('ÁæéÂÆπ') || mainCategory.includes('ÂÅ•Â∫∑')) return descriptionPlaceholders['ÁæéÂÆπÂÆ§„ÉªÁêÜÂÆπÂÆ§'];
        if (subCategory.includes('Êï¥‰Ωì') || subCategory.includes('Êï¥È™®Èô¢')) return descriptionPlaceholders['Êï¥‰Ωì„ÉªÊï¥È™®Èô¢„ÉªÈçºÁÅ∏Èô¢'];
        if (mainCategory === 'È£≤È£üÈñ¢ÈÄ£') return descriptionPlaceholders['È£≤È£üÈñ¢ÈÄ£'];
        return descriptionPlaceholders['„Éá„Éï„Ç©„É´„Éà'];
    }, [mainCategory, subCategory]);


    useEffect(() => {
        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
            if (currentUser) {
                setUser(currentUser);
            } else {
                router.push('/partner/login');
            }
        });
        return () => unsubscribe();
    }, [router]);

    const fetchStoreProfile = useCallback(async (currentUser: User) => {
        if (!currentUser) return;
        setLoading(true);
        try {
            // üü¢ ‰øÆÊ≠£ÁÇπ 1: Ë™≠„ÅøËæº„ÅøÂÖà„Çí 'ads' „Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Å´Â§âÊõ¥
            const adsRef = collection(db, 'ads');
            // üü¢ ‰øÆÊ≠£ÁÇπ 2: „É≠„Ç∞„Ç§„É≥„É¶„Éº„Ç∂„Éº„ÅÆID (ownerId) „Åß„Éï„Ç£„É´„Çø„É™„É≥„Ç∞
            const q = query(adsRef, where('ownerId', '==', currentUser.uid));
            const querySnapshot = await getDocs(q);

            if (!querySnapshot.empty) {
                const storeDoc = querySnapshot.docs[0];
                const storeData = storeDoc.data();
                setStoreId(storeDoc.id);
                setStoreName(storeData.storeName || '');
                setAddress(storeData.address || '');
                setPhoneNumber(storeData.phoneNumber || '');
                setMainCategory(storeData.mainCategory || '');
                setSubCategory(storeData.subCategory || '');
                setOtherMainCategory(storeData.otherMainCategory || '');
                setOtherSubCategory(storeData.otherSubCategory || '');
                setDescription(storeData.description || '');
                setWebsiteUrl(storeData.websiteUrl || '');
                setSnsUrls(storeData.snsUrls || ['', '', '']);
                setMainImageUrl(storeData.mainImageUrl || null);
                setGalleryImageUrls(storeData.galleryImageUrls || []);
            }
        } catch (err: any) {
            console.error("Â∫óËàóÊÉÖÂ†±„ÅÆÂèñÂæó„Å´Â§±Êïó:", err);
            let errorMessage = "Â∫óËàóÊÉÖÂ†±„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ";
            if (err.code === 'permission-denied') {
                errorMessage += " Firebase„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„É´„Éº„É´„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ";
            }
            setError(errorMessage);
        }
        setLoading(false);
    }, []);

    useEffect(() => {
        if (user) {
            fetchStoreProfile(user);
        }
    }, [user, fetchStoreProfile]);
    
    useEffect(() => {
        if (mainCategory && categoryData[mainCategory as keyof typeof categoryData]) {
            setSubCategoryOptions(categoryData[mainCategory as keyof typeof categoryData]);
        } else {
            setSubCategoryOptions([]);
        }
    }, [mainCategory]);


    const handleMainImageChange = (event: React.ChangeEvent<HTMLInputElement>) => { if (event.target.files && event.target.files[0]) { setMainImageFile(event.target.files[0]); } };
    const handleGalleryImagesChange = (event: React.ChangeEvent<HTMLInputElement>) => { if (event.target.files) { setGalleryImageFiles(prev => [...prev, ...Array.from(event.target.files!)]); } };
    const handleSnsUrlChange = (index: number, value: string) => { const newSnsUrls = [...snsUrls]; newSnsUrls[index] = value; setSnsUrls(newSnsUrls); };
    
    const handleDeleteImage = async (imageUrlToDelete: string, imageType: 'main' | 'gallery') => {
        if (!user || !storeId) {
            alert("„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
            return;
        }
        if (!window.confirm("„Åì„ÅÆÂÜôÁúü„ÇíÊú¨ÂΩì„Å´ÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü„Åì„ÅÆÊìç‰Ωú„ÅØÂÖÉ„Å´Êàª„Åõ„Åæ„Åõ„Çì„ÄÇ")) {
            return;
        }
        
        // üö® Ê≥®ÊÑè: „Çµ„Éº„Éê„ÉºÂÅ¥API /api/partner/delete-image „ÅÆ‰øÆÊ≠£„ÇÇÂøÖË¶Å„Åß„Åô„ÄÇ
        
        setError(null);
        try {
            const token = await user.getIdToken();
            const response = await fetch('/api/partner/delete-image', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`,
                },
                body: JSON.stringify({ storeId, imageUrl: imageUrlToDelete, imageType }),
            });

            const data = await response.json();
            if (!response.ok) {
                throw new Error(data.error || "ÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ");
            }
            
            if (imageType === 'main') {
                setMainImageUrl(null);
            } else {
                setGalleryImageUrls(prev => prev.filter(url => url !== imageUrlToDelete));
            }
            alert("ÂÜôÁúü„ÇíÂâäÈô§„Åó„Åæ„Åó„Åü„ÄÇ");

        } catch (err: any) {
            console.error("ÁîªÂÉèÂâäÈô§„Ç®„É©„Éº:", err);
            setError(err.message);
        }
    };

    const handleSaveProfile = async () => {
        if (!user) {
            console.error("Save failed: User is not logged in.");
            return alert('„É≠„Ç∞„Ç§„É≥„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ');
        }

        console.log("--- 1. SAVE PROCESS STARTED ---");
        console.log("User ID:", user.uid);

        if (!mainCategory || (mainCategory !== '„Åù„ÅÆ‰ªñ' && !subCategory)) { return alert('„Ç´„ÉÜ„Ç¥„É™ÔºàÂ§ßÂàÜÈ°û„ÉªÂ∞èÂàÜÈ°ûÔºâ„ÅØÂøÖÈ†àÈ†ÖÁõÆ„Åß„Åô„ÄÇ'); }
        if (mainCategory === '„Åù„ÅÆ‰ªñ' && !otherMainCategory) { return alert('„Ç´„ÉÜ„Ç¥„É™ÔºàÂ§ßÂàÜÈ°ûÔºâ„Åß„Äå„Åù„ÅÆ‰ªñ„Äç„ÇíÈÅ∏„Çì„Å†Â†¥Âêà„ÅØ„ÄÅÂÜÖÂÆπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'); }
        if (subCategory === '„Åù„ÅÆ‰ªñ' && !otherSubCategory) { return alert('„Ç´„ÉÜ„Ç¥„É™ÔºàÂ∞èÂàÜÈ°ûÔºâ„Åß„Äå„Åù„ÅÆ‰ªñ„Äç„ÇíÈÅ∏„Çì„Å†Â†¥Âêà„ÅØ„ÄÅÂÜÖÂÆπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'); }

        setIsSaving(true);
        setError(null);

        try {
            // üü¢ ‰øÆÊ≠£ÁÇπ 3: ‰øùÂ≠òÂÖà„Çí„Éà„ÉÉ„Éó„É¨„Éô„É´„ÅÆ 'ads' „Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Å´Â§âÊõ¥
            const adsCollectionRef = collection(db, 'ads'); 
            console.log("--- 2. Firestore Path ---");
            console.log("Attempting to write to collection: ads");
            
            let currentStoreId = storeId;
            
            // üü¢ ‰øÆÊ≠£ÁÇπ 4: Ê∞∏Á∂öÁöÑ„Å™ ownerId „Çí„Éá„Éº„Çø„Å´Âê´„ÇÅ„Çã
            const textData = { 
                storeName, address, phoneNumber, 
                mainCategory, subCategory, 
                otherMainCategory: mainCategory === '„Åù„ÅÆ‰ªñ' ? otherMainCategory : '', 
                otherSubCategory: subCategory === '„Åù„ÅÆ‰ªñ' ? otherSubCategory : '', 
                description, websiteUrl, 
                snsUrls: snsUrls.filter(url => url.trim() !== ''), 
                ownerId: user.uid, // ‚òÖ „Éë„Éº„Éà„Éä„Éº„ÇíË≠òÂà•„Åô„Çã„Åü„ÇÅ„ÅÆÊúÄÈáçË¶Å„Éï„Ç£„Éº„É´„Éâ
                updatedAt: serverTimestamp(), 
            };
            console.log("--- 3. Firestore Data ---");
            console.log("Data to save:", textData);

            if (!currentStoreId) {
                console.log("Creating new document in 'ads'...");
                const docRef = await addDoc(adsCollectionRef, { 
                    ...textData, 
                    status: 'pending', 
                    createdAt: serverTimestamp(), 
                    mainImageUrl: '', 
                    galleryImageUrls: [] 
                });
                currentStoreId = docRef.id;
                setStoreId(currentStoreId);
                console.log("SUCCESS: New document created with ID:", currentStoreId);
            } else {
                console.log("Updating existing document in 'ads':", currentStoreId);
                const storeDocRefForUpdate = doc(adsCollectionRef, currentStoreId);
                await updateDoc(storeDocRefForUpdate, textData);
                console.log("SUCCESS: Document updated.");
            }
            
            const storeDocRef = doc(adsCollectionRef, currentStoreId!);

            if (mainImageFile) {
                const uniqueFileName = `main_${uuidv4()}_${mainImageFile.name}`;
                // üü¢ ‰øÆÊ≠£ÁÇπ 5: Storage „Éë„Çπ„Çí ads „Å´Â§âÊõ¥ (Êé®Â•®)
                const storagePath = `ads/${currentStoreId}/${uniqueFileName}`; 
                console.log("--- 4. Main Image Upload ---");
                console.log("Uploading to Storage path:", storagePath);
                const fileRef = ref(storage, storagePath);
                const uploadTask = await uploadBytesResumable(fileRef, mainImageFile);
                const updatedMainImageUrl = await getDownloadURL(uploadTask.ref);
                await updateDoc(storeDocRef, { mainImageUrl: updatedMainImageUrl });
                setMainImageUrl(updatedMainImageUrl);
                console.log("SUCCESS: Main image uploaded.");
            }
            
            if (galleryImageFiles.length > 0) {
                console.log(`--- 5. Gallery Image Upload (${galleryImageFiles.length} files) ---`);
                const newGalleryImageUrls: string[] = [];
                for (const file of galleryImageFiles) {
                    const uniqueFileName = `gallery_${uuidv4()}_${file.name}`;
                    // üü¢ ‰øÆÊ≠£ÁÇπ 6: Storage „Éë„Çπ„Çí ads „Å´Â§âÊõ¥ (Êé®Â•®)
                    const storagePath = `ads/${currentStoreId}/${uniqueFileName}`; 
                    console.log("Uploading to Storage path:", storagePath);
                    const fileRef = ref(storage, storagePath);
                    const uploadTask = await uploadBytesResumable(fileRef, file);
                    const downloadURL = await getDownloadURL(uploadTask.ref);
                    newGalleryImageUrls.push(downloadURL);
                }
                await updateDoc(storeDocRef, { galleryImageUrls: arrayUnion(...newGalleryImageUrls) });
                setGalleryImageUrls(prev => [...prev, ...newGalleryImageUrls]);
                console.log("SUCCESS: Gallery images uploaded.");
            }
            
            setMainImageFile(null);
            setGalleryImageFiles([]);

            console.log("--- 6. SAVE PROCESS COMPLETED ON CLIENT ---");
            alert('Â∫óËàóÊÉÖÂ†±„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü„ÄÇ');

        } catch (err: any) {
            console.error("!!! SAVE FAILED !!! An error occurred in handleSaveProfile:", err);
            let errorMessage = `‰øùÂ≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${err.message}`;
            if (err.code === 'permission-denied' || (err.code && err.code.includes('storage/unauthorized'))) {
                errorMessage += "\n\n„ÄêÈáçË¶Å„Äë„Åì„Çå„ÅØFirebase„ÅÆÊ®©Èôê„Ç®„É©„Éº„Åß„Åô„ÄÇFirebase„Ç≥„É≥„ÇΩ„Éº„É´„ÅßFirestore„Å®Storage‰∏°Êñπ„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„É´„Éº„É´„ÅåÊ≠£„Åó„ÅèË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ";
            }
            setError(errorMessage);
        } finally {
            setIsSaving(false);
        }
    };

    if (loading) return <div>Ë™≠„ÅøËæº„Åø‰∏≠...</div>;

    return (
        <div className="container mx-auto p-8 max-w-3xl">
            <h1 className="text-2xl font-bold mb-6">Â∫óËàó„Éó„É≠„Éï„Ç£„Éº„É´„ÅÆÁôªÈå≤„ÉªÁ∑®ÈõÜ</h1>
            {error && <p className="text-red-500 my-4 bg-red-100 p-3 rounded whitespace-pre-wrap">„Ç®„É©„Éº: {error}</p>}
            <div className="space-y-6">
                <div><label className="font-bold">Â∫óËàóÂêç *</label><input type="text" value={storeName} onChange={(e) => setStoreName(e.target.value)} className="w-full p-2 border rounded mt-1" /></div>
                <div><label className="font-bold">‰ΩèÊâÄ *</label><input type="text" value={address} onChange={(e) => setAddress(e.target.value)} className="w-full p-2 border rounded mt-1" /></div>
                {address && ( <div className="mt-4"><iframe width="100%" height="300" style={{ border: 0 }} loading="lazy" allowFullScreen src={`https://maps.google.co.jp/maps?output=embed&q=${encodeURIComponent(address)}`}></iframe></div> )}
                <div><label className="font-bold">ÈõªË©±Áï™Âè∑ *</label><input type="text" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} className="w-full p-2 border rounded mt-1" /></div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 border p-4 rounded-md">
                    <div>
                        <label className="font-bold">„Ç´„ÉÜ„Ç¥„É™ÔºàÂ§ßÂàÜÈ°ûÔºâ*</label>
                        <select value={mainCategory} onChange={e => setMainCategory(e.target.value)} className="w-full p-2 border rounded mt-1">
                            <option value="">ÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</option>
                            {mainCategories.map(cat => <option key={cat} value={cat}>{cat}</option>)}
                        </select>
                        {mainCategory === '„Åù„ÅÆ‰ªñ' && ( <input type="text" value={otherMainCategory} onChange={e => setOtherMainCategory(e.target.value)} placeholder="„Ç´„ÉÜ„Ç¥„É™Âêç„ÇíÂÖ•Âäõ" className="w-full p-2 border rounded mt-2"/> )}
                    </div>
                    <div>
                        <label className="font-bold">„Ç´„ÉÜ„Ç¥„É™ÔºàÂ∞èÂàÜÈ°ûÔºâ*</label>
                        <select value={subCategory} onChange={e => setSubCategory(e.target.value)} disabled={!mainCategory} className="w-full p-2 border rounded mt-1 disabled:bg-gray-100">
                            <option value="">Â§ßÂàÜÈ°û„ÇíÂÖà„Å´ÈÅ∏Êäû</option>
                            {subCategoryOptions.map(sub => <option key={sub} value={sub}>{sub}</option>)}
                        </select>
                        {subCategory === '„Åù„ÅÆ‰ªñ' && ( <input type="text" value={otherSubCategory} onChange={e => setOtherSubCategory(e.target.value)} placeholder="„Ç´„ÉÜ„Ç¥„É™Âêç„ÇíÂÖ•Âäõ" className="w-full p-2 border rounded mt-2"/> )}
                    </div>
                </div>
                
                <div>
                    <div className="flex justify-between items-center mb-1">
                        <div>
                            <label className="font-bold">Â∫óËàóÁ¥π‰ªãÊñá„ÉªÂñ∂Ê•≠ÊôÇÈñì</label>
                            <p className="text-sm text-gray-500 mt-1">Âñ∂Ê•≠ÊôÇÈñì„ÇÑÂÆö‰ºëÊó•„ÇÇ„Åì„Å°„Çâ„Å´„ÅîË®òÂÖ•„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
                        </div>
                        <button type="button" onClick={() => setDescription(descriptionPlaceholder)} className="bg-blue-500 text-white text-sm font-bold py-2 px-4 rounded hover:bg-blue-600 transition-colors">„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíË≤º„Çä‰ªò„Åë</button>
                    </div>
                    <textarea value={description} onChange={(e) => setDescription(e.target.value)} className="w-full p-2 border rounded mt-1" rows={15} placeholder="„Ç´„ÉÜ„Ç¥„É™„ÇíÈÅ∏ÊäûÂæå„ÄÅ„Äå„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíË≤º„Çä‰ªò„Åë„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®ÂÖ•Âäõ„ÅåÁ∞°Âçò„Å´„Å™„Çä„Åæ„Åô„ÄÇ"></textarea>
                </div>
                
                <div className="space-y-2">
                    <label className="font-bold">„Éà„ÉÉ„ÉóÁîªÂÉè (1Êûö)</label>
                    <p className="text-sm text-gray-500">Êé®Â•®„Çµ„Ç§„Ç∫: Ê®™1200px √ó Á∏¶675px (16:9)</p>
                    <div className="p-2 border rounded min-h-[100px]">
                        {(mainImageUrl || mainImageFile) ? (
                            <div className="relative inline-block">
                                <img src={mainImageFile ? URL.createObjectURL(mainImageFile) : mainImageUrl!} alt="„Éà„ÉÉ„ÉóÁîªÂÉè„Éó„É¨„Éì„É•„Éº" className="w-48 h-auto rounded" />
                                <button type="button" onClick={() => { if (mainImageFile) { setMainImageFile(null); const input = document.getElementById('main-image-input') as HTMLInputElement; if (input) input.value = ''; } else if (mainImageUrl) { handleDeleteImage(mainImageUrl, 'main'); } }} className="absolute top-0 right-0 bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center -m-2">X</button>
                            </div>
                        ) : ( <p className="text-gray-400">„Åæ„Å†ÁîªÂÉè„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p> )}
                    </div>
                    <input id="main-image-input" type="file" accept="image/*" onChange={handleMainImageChange} className="text-sm" />
                </div>
                <div className="space-y-2">
                    <label className="font-bold">„ÇÆ„É£„É©„É™„ÉºÂÜôÁúü (Ë§áÊï∞ÂèØ)</label>
                    <p className="text-sm text-gray-500">Êé®Â•®„Çµ„Ç§„Ç∫: Ê®™800px √ó Á∏¶800px (1:1)</p>
                    <div className="p-2 border rounded min-h-[112px] flex flex-wrap gap-2">
                        {galleryImageUrls && galleryImageUrls.filter(url => url).map((url, index) => (
                            <div key={index} className="relative">
                                <img src={url} alt={`„ÇÆ„É£„É©„É™„ÉºÁîªÂÉè ${index + 1}`} className="w-24 h-24 object-cover rounded" onError={(e) => { (e.target as HTMLImageElement).parentElement!.style.display = 'none'; }} />
                                <button type="button" onClick={() => handleDeleteImage(url, 'gallery')} className="absolute top-[-5px] right-[-5px] bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">X</button>
                            </div>
                        ))}
                        {galleryImageFiles.map((file, index) => (
                               <div key={index} className="relative">
                                    <img src={URL.createObjectURL(file)} alt={`Êñ∞Ë¶è„ÇÆ„É£„É©„É™„ÉºÁîªÂÉè ${index + 1}`} className="w-24 h-24 object-cover rounded"/>
                                    <button type="button" onClick={() => setGalleryImageFiles(galleryImageFiles.filter((_, i) => i !== index))} className="absolute top-[-5px] right-[-5px] bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">X</button>
                               </div>
                        ))}
                        {galleryImageUrls.filter(url => url).length === 0 && galleryImageFiles.length === 0 && (<p className="text-gray-400">„Åæ„Å†ÂÜôÁúü„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>)}
                    </div>
                    <input type="file" multiple onChange={handleGalleryImagesChange} accept="image/*" className="text-sm" />
                </div>
                
                <div><label className="font-bold">ÂÖ¨Âºè„Ç¶„Çß„Éñ„Çµ„Ç§„ÉàURL</label><input type="url" value={websiteUrl} onChange={(e) => setWebsiteUrl(e.target.value)} className="w-full p-2 border rounded mt-1" placeholder="https://..." /></div>
                <div><label className="font-bold">SNS URL 1</label><input type="url" value={snsUrls[0]} onChange={(e) => handleSnsUrlChange(0, e.target.value)} className="w-full p-2 border rounded mt-1" placeholder="https://..." /></div>
                <div><label className="font-bold">SNS URL 2</label><input type="url" value={snsUrls[1]} onChange={(e) => handleSnsUrlChange(1, e.target.value)} className="w-full p-2 border rounded mt-1" placeholder="https://..." /></div>
                <div><label className="font-bold">SNS URL 3</label><input type="url" value={snsUrls[2]} onChange={(e) => handleSnsUrlChange(2, e.target.value)} className="w-full p-2 border rounded mt-1" placeholder="https-..." /></div>
                
                <button onClick={handleSaveProfile} disabled={isSaving} className="px-6 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-400">
                    {isSaving ? '‰øùÂ≠ò‰∏≠...' : '‰øùÂ≠ò„Åô„Çã'}
                </button>
            </div>

            <div className="mt-8">
                <Link href="/partner/dashboard" legacyBehavior><a className="text-blue-600 hover:underline">‚Üê „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´Êàª„Çã</a></Link>
            </div>
        </div>
    );
};

export default EditStorePage;